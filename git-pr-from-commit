#!/bin/bash
# =============================================================================
# Description:
#   Automates the process of creating a temporary worktree, cherry-picking a
#   specified commit onto a new branch, pushing that branch to the remote,
#   and then opening a pull request.
#
# Usage:
#   git pr-from-commit <commit> [<base branch>]
#
#   - <commit>: The commit hash you want to cherry-pick.
#   - <base branch>: The branch to base your new branch on (defaults to "main").
#
# Notes:
#   - The script exits immediately if any command fails.
#   - Ensure you have the GitHub CLI (`gh`) installed and authenticated.
# =============================================================================
set -e # Exit script if an error occurs

COMMIT=$1
BASE="${2:-main}"
BRANCH=$(whoami)/cherry-pick-$COMMIT

# Ensure we have required information

if [ -z "$COMMIT" ]; then
  printf "Usage: git pr-from-commit <commit> [<base branch>]\n"
  exit 1
fi

printf "üõ†Ô∏è Creating temporary worktree..."
TEMPDIR=$(dirname $(mktemp -u))
WORKTREE=$TEMPDIR/$(basename $(pwd))-$BRANCH
git worktree add $WORKTREE -b $BRANCH $BASE -q
printf "done.\n"

printf "üìÇ Changing directory to worktree..."
PREVIOUS_DIR=$(pwd)
cd $WORKTREE
printf "done.\n"

printf "üçí Cherry picking commit $COMMIT\n"
git cherry-pick $COMMIT

printf "üöÄ Pushing changes to $BASE and creating pull request\n"
git push -q --set-upstream origin $BRANCH
gh pr create --base $BASE
printf "\n"

printf "üßπ Cleaning up..."
git worktree remove $WORKTREE
printf "done.\n"
